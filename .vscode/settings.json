{
    "files.associations": {
        "*.tcc": "cpp",
        "ostream": "cpp",
        "iostream": "cpp",
        "new": "cpp",
        "array": "cpp",
        "atomic": "cpp",
        "bit": "cpp",
        "cctype": "cpp",
        "charconv": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "compare": "cpp",
        "concepts": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "deque": "cpp",
        "string": "cpp",
        "unordered_map": "cpp",
        "vector": "cpp",
        "exception": "cpp",
        "algorithm": "cpp",
        "functional": "cpp",
        "iterator": "cpp",
        "memory": "cpp",
        "memory_resource": "cpp",
        "numeric": "cpp",
        "optional": "cpp",
        "random": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "utility": "cpp",
        "format": "cpp",
        "initializer_list": "cpp",
        "iosfwd": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "numbers": "cpp",
        "span": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "text_encoding": "cpp",
        "typeinfo": "cpp",
        "variant": "cpp"
    },

    // konoFileHeader 插件的配置
        // 头部注释
        "fileheader.customMade": {
            // Author字段是文件的创建者 可以在specialOptions中更改特殊属性
            // 公司项目和个人项目可以配置不同的用户名与邮箱 搜索: gitconfig includeIf  比如: https://ayase.moe/2021/03/09/customized-git-config/
            // 自动提取当前git config中的: 用户名、邮箱
            // "Author": "git config user.name && git config user.email", // 同时获取用户名与邮箱
            "Author": "git config user.name", // 仅获取用户名
            // "Author": "git config user.email", // 仅获取邮箱
            // "Author": "OBKoro1", // 写死的固定值 不从git config中获取
            "Date": "Do not edit", // 文件创建时间(不变)
            // LastEditors、LastEditTime、FilePath将会自动更新 如果觉得时间更新的太频繁可以使用throttleTime(默认为1分钟)配置更改更新时间。
            "LastEditors": "git config user.name", // 文件最后编辑者 与Author字段一致
            // 由于编辑文件就会变更最后编辑时间，多人协作中合并的时候会导致merge
            // 可以将时间颗粒度改为周、或者月，这样冲突就减少很多。搜索变更时间格式: dateFormat
            "LastEditTime": "Do not edit", // 文件最后编辑时间
            // 输出相对路径，类似: /文件夹名称/src/index.js
            "FilePath": "Do not edit", // 文件在项目中的相对路径 自动更新
            // 插件会自动将光标移动到Description选项中 方便输入 Description字段可以在specialOptions更改
            "Description": "", // 介绍文件的作用、文件的入参、出参。
            // custom_string_obkoro1~custom_string_obkoro100都可以输出自定义信息
            // 可以设置多条自定义信息 设置个性签名、留下QQ、微信联系方式、输入空行等
            "custom_string_obkoro1": "", 
            // 版权声明 保留文件所有权利 自动替换年份 获取git配置的用户名和邮箱
            // 版权声明获取git配置, 与Author字段一致: ${git_name} ${git_email} ${git_name_email}
            "custom_string_obkoro1_copyright": "Copyright (c) ${now_year} by ${git_name}, All Rights Reserved. "
            // "custom_string_obkoro1_copyright": "Copyright (c) ${now_year} by 写死的公司名/用户名, All Rights Reserved. "
        },
        // 函数注释
        "fileheader.cursorMode": {
            "description": "", // 函数注释生成之后，光标移动到这里
            "param": "", // param 开启函数参数自动提取 需要将光标放在函数行或者函数上方的空白行
            "return": "",
        },
        // 生成的图案
        // 使用 ctrl/command + shift + p 在输入 codeDesign- + 图案名字 来生成指定图案
        "fileheader.configObj": {
            "headDesign": false,
            "headDesignName": "random" // 默认为随机图案
            //'random', // 随机
            //'buddhalImg', // 佛祖
            //'buddhalImgSay', // 佛祖+佛曰
            //'buddhalSay', // 佛曰
            //'totemDragon', // 龙图腾
            //'belle', // 美女
            //'coderSong', // 程序员之歌
            //'loitumaGirl', // 甩葱少女
            //'keyboardAll', // 全键盘
            //'keyboardSmall', // 小键盘
            //'totemWestDragon', // 喷火龙
            //'jesus', // 耶稣
            //'dog', // 狗
            //'grassHorse', // 草泥马
            //'grassHorse2', // 草泥马2
            //'totemBat', // 蝙蝠
        },
        "marscode.chatLanguage": "cn"
}