/**
 *                        _oo0oo_
 *                       o8888888o
 *                       88" . "88
 *                       (| -_- |)
 *                       0\  =  /0
 *                     ___/`---'\___
 *                   .' \\|     |// '.
 *                  / \\|||  :  |||// \
 *                 / _||||| -:- |||||- \
 *                |   | \\\  - /// |   |
 *                | \_|  ''\---/''  |_/ |
 *                \  .-\__  '-'  ___/-. /
 *              ___'. .'  /--.--\  `. .'___
 *           ."" '<  `.___\_<|>_/___.' >' "".
 *          | | :  `- \`.;`\ _ /`;.`/ - ` : | |
 *          \  \ `_.   \_ __\ /__ _/   .-` /  /
 *      =====`-.____`.___ \_____/___.-`___.-'=====
 *                        `=---='
 * 
 * 
 *      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * 
 *            佛祖保佑     永不宕机     永无BUG
**/

//二维数组
#include <iostream>
using namespace std;

int main()
{
    //定义方式
    {
        /*
        int arr[ 行数 ][ 列数 ] = {
            { 数据1，数据2 }, 
            { 数据3，数据4 },
        };
        这种方法非常直观，易于理解

        int arr[][] = { 数据1，数据2 数据3，数据4 };
        上面是SB写的
        */

       int arr[2][3] = {
           { 0, 2, 3 },
           { 4, 5, 6 },
       };

       //也能一个个修改数据
       arr[0][0] = 1;

       //遍历数组
       for (int i = 0; i < 2; i++) {
           for (int j = 0; j < 3; j++) {
               //使用 "arr[i][j]" 做些事情
           }
       }

       //打印矩阵
       {
            //打印成一行
            for (int i = 0; i < 2; i++) {
                for (int j = 0; j < 3; j++) {
                    cout << arr[i][j] << " ";
                }
            }
            cout << endl;

            //打印矩阵(推荐)
            for (int i = 0; i < 2; i++) {
                for (int j = 0; j < 3; j++) {
                    cout << arr[i][j] << " ";
                }
                cout << endl;
            }
            //打印矩阵(美化)
            cout << "---------" << endl;
            for (int i = 0; i < 2; i++) {
                cout << "| ";
                for (int j = 0; j < 3; j++) {
                    cout << arr[i][j] << " ";
                }
                cout << "|" << endl;
            }
            cout << "---------" << endl;

       }
    }

    //二维数组数组名称用途
    {
        int arr[2][3] = {
            { 1, 2, 3 },
            { 4, 5, 6 },
        };

        //所占内存
        cout << "二维数组总占用内存空间为：" << sizeof(arr) << endl;
        cout << "二维数组一行占用内存空间为：" << sizeof(arr[0]) << endl;
        cout << "二维数组一个元素占用内存空间为：" << sizeof(arr[0][0]) << endl;

        //根据所占内存计算行数列数
        cout << "二维数组行数为：" << sizeof(arr) / sizeof(arr[0]) << endl;
        cout << "二维数组列数为：" << sizeof(arr[0]) / sizeof(arr[0][0]) << endl;

        //获取二维数组内存地址
        cout << "二维数组首地址为：" << arr << endl;
        cout << "二维数组第二行首地址为：" << arr[1] << endl;
        cout << "二维数组第二行第二个元素地址为：" << &arr[1][1] << endl;   //单个数要加取地址符 &
    }

    cout << "Press Enter to exit... ";
    cin.get();
    return 0;
}